syntax = "proto3";

package lospan;

option go_package = "./lospan";

import "lospan/entities.proto";
import "lospan/messages.proto";

service Lospan {
    // ListApplications lists all applications 
    rpc ListApplications(ListApplicationsRequest) returns (ListApplicationsResponse);

    // GetApplication returns a single application
    rpc GetApplication(GetApplicationRequest) returns (Application);

    // CreateApplication creates a new application
    rpc Createpplication(CreateApplicationRequest) returns (Application);

    // DeleteApplication removes an application. 
    rpc DeleteApplication(DeleteApplicationRequest) returns (Application);

    rpc ListDevices(ListDeviceRequest) returns (ListDeviceResponse);

    rpc CreateDevice(Device) returns (DeleteApplicationRequest);

    rpc GetDevice(GetDeviceRequest) returns (Device);

    // UpdateDevice updates a devices
    rpc UpdateDevice(Device) returns (Device);

    // DeleteDevice removes a device
    rpc DeleteDevice(DeleteDeviceRequest) returns (Device);

    // Retrieve an application's inbox, ie upstream messages
    rpc Inbox(InboxRequest) returns (InboxResponse);

    // Retrieve an applications outbox, ie downstream scheduled and delivered messages
    rpc Outbox(OutboxRequest) returns (OutboxResponse);

    // SendMessage sends a message to a device (ie downstream)
    rpc SendMessage(DownstreamMessage) returns (DownstreamMessage);

    // StreamMessages streams data for an application or a gateway to the client.
    rpc StreamMessages(StreamMessagesRequest) returns (stream UpstreamMessage);

    rpc ListGateways(ListGatewaysRequest) returns (ListGatewaysResponse);

    rpc CreateGateway(Gateway) returns (Gateway);

    rpc GetGateway(GetGatewayRequest) returns (Gateway);

    rpc UpdateGateway(Gateway) returns (Gateway);

    rpc DeleteGateway(DeleteGatewayRequest) returns (Gateway);

    rpc StreamGateway(StreamGatewayRequest) returns (stream GatewayMessage);
};